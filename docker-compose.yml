version: "3.5"

networks:
  openstates-network:
      name: openstates-network

services:
  scrape:
    build: .
    environment:
    - MYSQL_HOST=mysql
    - DATABASE_URL=postgres://openstates:openstates@db/openstatesorg
    - PYTHONPATH=./scrapers
    - NEW_YORK_API_KEY
    - INDIANA_API_KEY
    - DC_API_KEY
    - VIRGINIA_FTP_USER
    - VIRGINIA_FTP_PASSWORD
    volumes:
      - .:/opt/openstates/openstates/
    entrypoint: ["poetry", "run", "os-update"]
    networks:
      - openstates-network
  mysql:
    image: mariadb:10.3
#    command: mysqld_safe --max_allowed_packet=512M
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=capublic
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      - openstates-network
  ca-scrape:
    build:
      context: .
      dockerfile: Dockerfile.california
    environment:
      - MYSQL_HOST=mysql
      - DATABASE_URL=postgres://openstates:openstates@db/openstatesorg
      - PYTHONPATH=./scrapers
    volumes:
      - .:/opt/openstates/openstates/
    entrypoint: ["poetry", "run", "os-update"]
    networks:
    - openstates-network
  ca-download:
    build:
      context: .
      dockerfile: Dockerfile.california
    entrypoint: /opt/openstates/openstates/scrapers/ca/download.sh
    environment:
      - MYSQL_HOST=mysql
    volumes:
      - .:/opt/openstates/openstates/
    depends_on:
      - mysql
    networks:
      - openstates-network
  db:
    image: "mdillon/postgis:11-alpine"
    hostname: "db"
    ports:
      - "5405:5432"
    environment:
      POSTGRES_PASSWORD: openstates
      POSTGRES_USER: openstates
      POSTGRES_DB: openstatesorg
    volumes:
      - ./openstates-postgres/:/var/lib/postgresql/data
    networks:
      - openstates-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d db -U db"]
      interval: 10s
      timeout: 5s
      retries: 15
